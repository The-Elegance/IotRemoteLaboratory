@page "/stand/{Id:long}"
@inject HttpClient _httpClient;
@using IotRemoteLab.Domain
@using Microsoft.AspNetCore.SignalR.Client
@layout BlankLayout
@inject HubConnection _hubConnection
@inject NavigationManager _navigation;

<div class="stand-workflow">
    <div class="stand-workflow__left">
        <div class="workflow-box">
            <div class="workflow-box__header">
                <div style="display: flex; gap: 8px; align-items: center;">
                    <div @onclick="OnBackClicked" role="button" class="ant-page-header-back-button task-back__button back-task-button__space-item" style="font-size: 16px; color: white;">
                        <Icon Type="arrow-left" Theme="outline" />
                    </div>


                    <div class="workflow-box__title">
                        @Service.McuName
                    </div>
                </div>

                <div class="workflow-box__combobox">
                    <ComboBox @bind-SelectedItem="@Service.SelectedUart" Items="@Service.AvailableUarts" />
                </div>
            </div>
            <div class="workflow-box__item">
                @* <StreamFrame /> *@

                @*                 <div class="stream-frame">
                @if (Service.IsWebcameraEnable)
                {
                <span>Попытка подключение к трансляции</span>
                }
                else
                {
                <span>Отсутствует активная трансляция</span>
                }
                </div> *@

                @*                 <StreamFrame /> *@
            </div>

            <div class="workflow-box__item workflow-box-grid">
                <div class="workflow-box-buttons">
                    @foreach (var button in Service.StandButton)
                    {
                        <SignalButton PortId="@button.Name" Pressed="OnSignalButtonPressed" Unpressed="OnSignalButtonUnpressed" />
                        <CheckBox Text="@button.Name" StateChanged="@OnButtonStateChanged" IsChecked="@button.IsChecked" />
                    }
                </div>

                <div class="workflow-box-leds">
                    @foreach (var led in Service.StandLeds)
                    {
                        <div class="stand-led">
                            <div class="stand-led__light @(led.IsEnable ? "-enable" : "")" />
                            <span class="stand-led__name">@led.Name</span>
                        </div>
                    }
                </div>
            </div>

            <div class="workflow-box__item -stretch">
                <Terminal SendMessageAction="@TerminalSendMessage" Logs="@Service.TerminalLogs" />
            </div>
        </div>
    </div>
    <div class="stand-workflow__right">

        <div class="workflow-box">
            <div class="workflow-box__item -stretch">
                <MonacoEditor @ref="codeEditor" MonacoEditorId="@Service.EditorElementId" DebugUpload="@Service.DebugUpload" DefaultBoilerplateCode="@Service.DefaultBoilerplateCode" CodeChanged="@OnCodeChanged" />
            </div>
        </div>
    </div>
</div>