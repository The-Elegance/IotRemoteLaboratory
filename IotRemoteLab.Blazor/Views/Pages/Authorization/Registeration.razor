@layout AuthorizationLayout
@page "/signup"

@using IotRemoteLab.Blazor.Models
@using IotRemoteLab.Blazor.Services
@using System.Text.RegularExpressions

@attribute [AllowAnonymous]

<div class="auth-container">
	<div class="auth-wrapper">
		<div class="auth-header">
			<h1 class="project-name">Iot Remote Laboratory</h1>
			<div class="authTitleWrapper">
				<span class="authTitle">Create your account</span>
				<span class="authDescription">Welcome back! Please enter your details.</span>
			</div>
		</div>

		<EditForm Model="@data" OnSubmit="Submit">
			<DataAnnotationsValidator />

			<div class="authFormField margin-bottom-28px">
				<label class="fieldLabel">Login</label>
				<InputText class="authInput" id="email" @bind-Value="data.Email" />
				<ValidationMessage For="@(() => data.Email)" />
			</div>

			<div class="authFormField margin-bottom-28px">
				<label class="fieldLabel">Login</label>
				<InputText class="authInput" id="email" @bind-Value="data.Login" />
				<ValidationMessage For="@(() => data.Login)" />
			</div>

			<div class="authFormField margin-bottom-28px">
				<label class="fieldLabel">Password</label>
				<InputText class="authInput" id="email" @bind-Value="data.Password" />
				<ValidationMessage For="@(() => data.Password)" />
			</div>

			<button class="default-button margin-bottom-28px" type="submit">Create Account</button>

			<div class="signupWrapper">
				<span class="text">Already have an account?</span>
				<a href="/login" class="link">Log In</a>
			</div>

		</EditForm>
	</div>
</div>

@code {
    private RegistrationUserData data = new();

    [Inject]
    private IAuthService _authService { get; set; }

    async void Submit()
    {
        var response = await _authService.Register(data.Login, Regex.Replace(data.Email, @"\s+", ""), data.Password);
    }
}
