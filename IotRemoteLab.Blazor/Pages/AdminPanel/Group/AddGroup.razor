@page "/addGroup"
@layout AdminPanelLayout
@inject DialogService DialogService
@inject NotificationService NotificationService
@inject HttpClient _httpClient



@using Radzen
@using Radzen.Blazor
@using IotRemoteLab.Domain.Team
@using IotRemoteLab.Domain.User
@using IotRemoteLab.Blazor.Pages.AdminPanel.Group

<h1>Add Group</h1>

<RadzenTemplateForm Data="@_team">
    <RadzenFieldset Text="Создание новой команды">
        <RadzenStack Gap="1rem">

            @*Поле для создания имени группы*@
            <RadzenRow AlignItems="AlignItems.Center" Gap="1rem">
                <RadzenColumn Size="3">
                    <RadzenLabel Text="Название команды" Component="GroupName" />
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenTextBox Name="GroupName" @bind-Value="@_team.Name" Style="width: 40%" />
                </RadzenColumn>
            </RadzenRow>

            @*Поле для добавления/создания новых учасников*@
            <RadzenRow AlignItems="AlignItems.Center" Gap="1rem">
                <RadzenColumn Size="3">
                    <RadzenLabel Text="Участники команды" />
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenDropDown @bind-Value=@values Data=@users TextProperty="Name" ValueProperty="Id" Name="DropDownMultiple"
                                    Multiple=true AllowClear=true Placeholder="Select users" Style="width: 80%" />
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenButton Text="Добавить пользователя" ButtonStyle="ButtonStyle.Secondary" Click=@OpenNewUserForm />
                </RadzenColumn>
            </RadzenRow>

        </RadzenStack>
    </RadzenFieldset>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Сохранить" Click="@Submit" />
    </RadzenStack>
</RadzenTemplateForm>


@code {
    Team _team = new();

    IEnumerable<Guid> values = new Guid[] { Guid.NewGuid(), Guid.NewGuid(), Guid.NewGuid() };

    List<User> users = new()
    {
        new User {Id = Guid.NewGuid(), Name = "Oleg"},
        new User {Id = Guid.NewGuid(), Name = "Jeck"},
        new User {Id = Guid.NewGuid(), Name = "Mike"},
        new User {Id = Guid.NewGuid(), Name = "Alis"},
        new User {Id = Guid.NewGuid(), Name = "Olga"}
    };

    public async Task OpenNewUserForm()
    {
        await DialogService.OpenAsync<NewUserForm>($"Создание нового микроконтроллера",
               new Dictionary<string, object>(),
               new DialogOptions() { Width = "700px", Height = "512px", Resizable = true, Draggable = true });
    }

    async void Submit()
    {
        //
    }
}
