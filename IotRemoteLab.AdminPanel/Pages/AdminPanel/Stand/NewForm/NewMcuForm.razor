@page "/mcuForm"
@layout AdminPanelLayout
@inject Radzen.DialogService dialogService
@inject HttpClient _httpClient

@using Radzen
@using Radzen.Blazor
@using IotRemoteLab.Domain.Stand
@using static IotRemoteLab.AdminPanel.Pages.AdminPanel.Stand.AddStand
@using System.Collections

<RadzenTemplateForm Data="@_mcu">
    <RadzenFieldset Text="Микронконтроллер">
        <RadzenStack Gap="1rem" >
            @*Поле для названия Мку *@

            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="3">
                    <RadzenLabel Text="Название Mcu" Component="Name" />
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenTextBox Name="Name" @bind-Value="@_mcu.Name" Style="width: 100%"/>
                </RadzenColumn>
            </RadzenRow>
            @*Поле для создания/добавления фреймворка *@

            <RadzenRow AlignItems="AlignItems.Center" Gap="1rem">
                <RadzenColumn Size="3">
                    <RadzenLabel Text="Фреймворк" />
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenDropDown Data="@fram" TextProperty="Name" Name="Name" @bind-Value=@selectedFram Style="width: 80%"></RadzenDropDown>
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenButton Text="Создать фреймворк" ButtonStyle="ButtonStyle.Secondary" Click=@OpenNewFramForm />
                </RadzenColumn>
            </RadzenRow>
            @*Поле для скрипта *@

            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="3">
                    <RadzenLabel Text="Скрипт" Component="Script" />
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenTextBox Name="Script" @bind-Value="@_mcu.AssemblyScriptFile" Style="width: 100%"/>
                </RadzenColumn>
            </RadzenRow>
            @*Поле для скрипта развертывания ПО на стенде *@

            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="3">
                    <RadzenLabel Text="Скрипт развертывания ПО на стенде" Component="DeployScript" />
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenTextBox Name="DeployScript" @bind-Value="@_mcu.DeployScriptFile" Style="width: 100%"/>
                </RadzenColumn>
            </RadzenRow>
        </RadzenStack>
    </RadzenFieldset>

    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Сохранить" Click="@Submit" />
    </RadzenStack>
</RadzenTemplateForm>

@code {
    private Mcu _mcu = new();

    private McuFramework selectedFram;
    public static List<McuFramework> fram = new();

    protected override async Task OnAfterRenderAsync(bool isFirstRender)
    {
        await base.OnAfterRenderAsync(isFirstRender);

        if (isFirstRender)
        {
            LoadData();
        }
    }

    async void LoadData()
    {
        fram = await _httpClient.GetFromJsonAsync<List<McuFramework>>("/api/mcu/frameworks");

        await InvokeAsync(StateHasChanged);
    }

    public async Task OpenNewFramForm()
    {
        await dialogService.OpenAsync<NewFrameworkForm>($"Создать фреймворк",
               new Dictionary<string, object>(),
               new DialogOptions() { Width = "700px", Height = "512px", Resizable = true, Draggable = true });
    }

    async void Submit()
    {
        _mcu.Framework = selectedFram;

        var res = await _httpClient.PostAsJsonAsync<Mcu>("/api/mcu", _mcu);
        Console.WriteLine(res.StatusCode.ToString());
        dialogService.Close(true);
    }
}