@layout AuthorizationLayout
@page "/signup"

@using IotRemoteLab.Blazor.Models
@using IotRemoteLab.Blazor.Services
@using System.Text.RegularExpressions
@using IotRemoteLab.Blazor.Views.Pages.Authorization.Registration.Components

@inject AuthService _authService

@attribute [AllowAnonymous]

<div>
    <Steps Current="_currentStep">
        @foreach (var step in _stepItems)
        {
            <Step Title="@step.Title" />
        }
    </Steps>

    <div>
        @if (_currentStep == 0)
        {
            <RegistrationPrimaryForm Model="@Model" ToNextStep="Next" />
        }
        else if (_currentStep == 1)
        {
            <RegistrationStudentForm Model="@Model" ToNextStep="Next" SendRegistrationRequest="@SendRequest" />
        }
        else
        {
            <Result Status="success"
                    Title="Заявка на регистрацию ученика отправлена!"
                    SubTitle="Одобрение заявки занимает некоторое время, вы получите ответ на вашу электронную почту.">
            </Result>
        }
    </div>
</div>

@code {
    record StepItem(string Title);

    RegistrationUserData Model = new();

    StepItem[] _stepItems = [
        new("Primary"),
    new("Student"),
    new("Finished")
    ];

    int _currentStep { get; set; } = 0;

    void Next()
    {
        _currentStep++;
        StateHasChanged();
    }
}

@code {


    async Task SendRequest(RegistrationUserData data)
    {
        data.Email = Regex.Replace(Model.Email, @"\s+", "");

        var response = await _authService.Register(data);
    }
}
